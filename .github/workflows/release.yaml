name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
      - run: |
          npm ci
          npm run lint
          npm test
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v5.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          DOCKER_REGISTRY_USER: ${{ github.repository_owner }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}
        with:
          extra_plugins: |
            @eclass/semantic-release-sentry-releases
            @codedependant/semantic-release-docker
            @semantic-release/git
            @semantic-release/changelog
            @semantic-release/exec
      - name: Read .release file
        id: release
        run: echo "::set-output name=release::$(cat .release)"
      - name: Create Sentry release
        if: ${{ steps.release.outputs.release == 'yes' }}
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
