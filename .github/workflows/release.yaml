name: Release
on:
  push:
    branches:
      - master
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2.5.4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        with:
          semantic_version: 17
          extra_plugins: |
            @eclass/semantic-release-sentry-releases
            @semantic-release/git
            @semantic-release/changelog
      - name: Create Sentry release
        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
      # Built from https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
      - name: Configure
        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key
          cat >>~/.ssh/config <<END
          Host bot
            HostName $SSH_BOT_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/prod.key
            StrictHostKeyChecking no
          Host worker
            HostName $SSH_WORKER_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/prod.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_BOT_HOST: ${{ secrets.SSH_BOT_HOST }}
          SSH_WORKER_HOST: ${{ secrets.SSH_WORKER_HOST }}
          DEPLOY_BRANCH: ${{ secrets.DEPLOY_BRANCH }}
      - name: Stop Bot Process
        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
        run: ssh bot 'source ~/.zshrc && pm2 kill'
      - name: Update Bot server
        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
        run: ssh bot 'source ~/.zshrc && cd ~/genesis && git checkout -- . && git fetch --all && git reset --hard origin/$DEPLOY_BRANCH'
      - name: Update Bot dependencies
        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
        run: ssh bot 'source ~/.zshrc && cd ~/genesis && rm -rf node_modules && npm ci'
      - name: Start Bot Process
        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
        run: ssh bot 'source ~/.zshrc && cd ~/genesis && npm run start'
#      - name: Stop Worker Process
#        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
#        run: ssh worker 'source ~/.zshrc && pm2 kill'
#      - name: Update Worker server
#        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
#        run: ssh worker 'source ~/.zshrc && cd ~/genesis && git checkout -- . && git fetch --all && git reset --hard origin/$DEPLOY_BRANCH'
#      - name: Update Worker dependencies
#        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
#        run: ssh worker 'source ~/.zshrc && cd ~/genesis && rm -rf node_modules && npm ci'
#      - name: Start Worker Process
#        if: ${{ env.SEMANTIC_RELEASE_COMMENCE == true  }}
#        run: ssh worker 'source ~/.zshrc && cd ~/genesis && npm run start:worker'
